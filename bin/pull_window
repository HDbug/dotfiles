#!/bin/bash

name=$(get_pull_name "$@")

direction="bottom"
namespace=""
forget=false
global=false

while getopts 'd:n:gf' flag; do
	case "${flag}" in
		d) 
			direction="$OPTARG"
		;;
		f)
			forget=true
		;;
		g)
			global=true
		;;
  esac
done
shift $((OPTIND-1))


if [[ $forget == true ]]; then
	# TODO should we save the original classnames and restore them upon forgetting?
	bspc rule -r *:$name state=floating layer=above
	xdotool getwindowfocus set_window --classname "forgotten"
	exit
fi

function hide_others {
	dirs=( top bottom left right )

	dir=$1
	win=$(xdotool search --classname --onlyvisible '_'$dir'_pull_window')
	if [[ -n $win ]]; then 
		xdotool windowunmap $win
		break
	fi
}

bspc rule -a *:$name state=floating layer=above
[[ $global == true ]] && bspc rule -a *:$name sticky=on

if [[ -z $(xdotool search --classname '^'$name'$') ]]; then
	size=$(cat /tmp/xrandr_output | grep $(query_primary) | awk '{print $4}')
	width=$(echo $size | awk -F 'x' '{print $1}')
	height=$(echo $size | awk -F 'x' '{print $2}' | awk -F '+' '{print $1}')
	win_height=$height
	win_width=$width

	if [[ $direction == "bottom" || $direction == "top" ]]; then
		win_height=$(($height / 3))
	else
		win_width=$(($width / 3))
	fi

	x_offset=0
	y_offset=0
	if [[ $direction == "bottom" ]]; then
		y_offset=$(($height - $win_height))
	elif [[ $direction == "right" ]]; then
		x_offset=$(($width - $win_width))
	elif [[ $direction == "left" || $direction == "top" ]]; then
		# there seems to be a bug in xdotool, because moving with 0,0 doesn't move the window
		x_offset=1
	fi

	$BSPWM_SCRIPTS_DIR/state_toggle floating
	xdotool getwindowfocus set_window --classname $name windowsize $win_width $win_height windowmove $x_offset $y_offset
else
	if [[ -z $(xdotool search --classname --onlyvisible '^'$name'$') ]]; then
		hide_others $direction
		xdotool search --classname '^'$name'$' windowmap 
	else
		xdotool search --classname '^'$name'$' windowunmap windowfocus
	fi
fi

